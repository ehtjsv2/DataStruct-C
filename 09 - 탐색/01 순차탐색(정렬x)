<배운점>

-scanf() 오류
scanf가 안전하지 않으므로 scanf_s를 쓰거나 _CRT_SECURE_NO_WARNINGS를 이용하라고 한다.
scanf가 안전하지 않은 이유는 scanf가 받을 수 있는 입력 데이터의 크기가 있는데 
사용자가 고의로 또는 실수로 해당 데이터 크기를 초과하는 값을 입력할 경우 
초과된 데이터가 다른 메모리를 침범해 프로그램에 오류가 발생할 수 있기 때문.

-scanf() 오류 해결
#define _CRT_SECURE_NO_WARNINGS 를 코드 최상단에 써준다.
scanf_s를 써준다
--------------------------------------------------------------------------------------------------------------------
<코드>

#include <stdio.h>
#include <stdlib.h>
#include <time.h>

#define MAX 8

void printArr(int arr[], int len) {
	for (int i = 0; i < len; i++) {
		printf("%d ", arr[i]);
	}
	printf("\n");
}

int sequentialSearch1(int arr[], int len, int key) {
	for (int i = 0; i < len; i++) {
		if (arr[i] == key)return i;
	}
	printf("키값을 찾을 수 없습니다.\n");
	return -1;
}

main() {
	int key;
	int random;
	int arr[MAX];
	int index;
	int len = sizeof(arr) / sizeof(int);
	srand(time(NULL));
	for (int i = 0; i < len; i++) {
		random = rand() % 100;
		arr[i] = random;
	}
	printf("정렬되지 않은 원소 : ");
	printArr(arr, len);

	//순차 탐색
	printf("찾을 원소 : ");
	scanf_s("%d", &key);

	printf("\n<<<<<순차 탐색실행>>>>>\n");
	index = sequentialSearch1(arr, len, key);
	if (index != -1)printf("키 %d는 arr의 인덱스 [%d]입니다.\n", key, index);
	
}

--------------------------------------------------------------------------------------------------------------------
<출력>
정렬되지 않은 원소 : 82 32 45 67 71 3 90 61
찾을 원소 : 32

<<<<<순차 탐색실행>>>>>
키 32는 arr의 인덱스 [1]입니다.
