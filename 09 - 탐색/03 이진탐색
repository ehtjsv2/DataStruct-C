<배운점>

------------------------------------------------------------------------------------------------------------
<코드>
#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>
#include <stdlib.h>
#include <time.h>

#define MAX 8

void swap(int arr[], int i, int j) {
	int tmp;
	tmp = arr[i];
	arr[i] = arr[j];
	arr[j] = tmp;
	return;
}

void selectionSort(int arr[], int len) { // 배열과 배열의 크기
	int min, index;
	int tmp;
	for (int j = 0; j < len - 1; j++) {
		min = arr[j];
		index = j;
		for (int i = j + 1; i < len; i++) {
			if (arr[i] < min) {
				min = arr[i];
				index = i;
			}
		}
		swap(arr, j, index);
	}
	return;
}

void printArr(int arr[], int len) {
	for (int i = 0; i < len; i++) {
		printf("%d ", arr[i]);
	}
	printf("\n");
}

int binarySearch(int arr[], int start, int end, int key) {
	static int cnt = 1;
	int middle;
	int index;
	if (end-start <= 0) {
		if (arr[start] == key)return start;
		else {
			printf("key 값을 찾지 못했습니다.\n");
			return -1;
		}
	}
	else {
		middle = (end+start) / 2;
		if (arr[middle] == key)return middle;
		else if (arr[middle] > key) return binarySearch(arr, start, middle - 1, key);
		else return binarySearch(arr, middle + 1, end, key);
	}
}

main() {
	int key;
	int random;
	int arr[MAX];
	int index;
	int len = sizeof(arr) / sizeof(int);
	srand(time(NULL));
	for (int i = 0; i < len; i++) {
		random = rand() % 100;
		arr[i] = random;
	}
	printf("정렬되지 않은 원소 : ");
	printArr(arr, len);
	selectionSort(arr, len);
	printf("정렬된 원소 : ");
	printArr(arr, len);

	//이진 탐색
	printf("찾을 원소 : ");
	scanf("%d", &key);

	printf("\n<<<<<이진 탐색실행>>>>>\n");
	index = binarySearch(arr, 0, len - 1, key);
	if (index != -1)printf("키 %d는 arr의 인덱스 [%d]입니다.\n", key, index);
}
------------------------------------------------------------------------------------------------------------
<출력>
정렬되지 않은 원소 : 45 39 44 48 89 56 24 6
정렬된 원소 : 6 24 39 44 45 48 56 89
찾을 원소 : 6

<<<<<이진 탐색실행>>>>>
키 6는 arr의 인덱스 [0]입니다.
