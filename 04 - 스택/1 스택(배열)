<배운점>

--------------------------------------------------------------------------------------------------
<코드>
#include<stdio.h>
#include<stdlib.h>

#define FALSE 0
#define TRUE 1
#define SIZE 10

typedef struct STACK { // STACK 구조체
	int arr[SIZE]; // 스택을 담당할 배열
	int top; // 스택의 위를 가리킴.
}STACK;

STACK* A = NULL;

void push(int data) { // 데이터를 스택안에 넣음
	if (A->top >= SIZE - 1) { // top 이 배열 가장끝자리를 가르키고있다면 가득참.
		printf("스택이 가득 찼습니다.\n");
		return ;
	}
	A->arr[++A->top] = data; // top이 -1부터 시작하므로 ++top후 데이터 삽입.
	return;
}

int pop() { // top이 가리키는 원소를 빼내어낸다.
	if (empty()) { // 스택이 비어있는지 확인
		printf("스택이 비어있습니다.\n");
		return -1;
	}
	return A->arr[A->top--]; // top이 가리키는 곳 원소를 리턴 후 --연산 실행
}

int peek() { // 꼭대기 원소를 알려줌.
	if (empty()) { 
		printf("스택이 비어있습니다.\n");
		return 0;
	}
	return A->arr[A->top]; // 빼내는 것이 아닌 가리킬 뿐이라 --연산 실행x
}

int empty() { // 비어있다면 1을 아니라면 0을 리턴
	if (A->top == -1) {
		return TRUE; 
	}
	else return FALSE; 
}

void printStack() { // 스택을 시각화해서 출력해주는 함수.
	int horse = A->top;
	if (empty()) {
		printf("스택이 비었습니다.\n");
		return;
	}
	for (int i = 0; i < horse + 1; i++) {
		printf("%d [%d]\n", A->arr[horse-i],horse-i);
	}
}

main() {
	A = (STACK*)malloc(sizeof(STACK));
	A->top = -1;

	//예외가 잘 실행되는가.
	printf("<예외확인>\n");
	pop();
	printStack();
	printf("------------------------------------\n");

	//push하기
	printf("<push()시작>\n");
	push(1);
	push(2);
	push(3);
	printf("------------------------------------\n");
	
	//스택 출력
	printf("<스택을 출력합니다.>\n");
	printStack();
	printf("------------------------------------\n");

	//pop하기
	printf("<pop시작>\n");
	printf("pop = % d 원소빼내기\n", pop());
	printf("pop = % d 원소빼내기\n", pop());
	printf("pop = % d 원소빼내기\n", pop());
	printf("pop = % d 원소빼내기\n", pop());
	printf("------------------------------------\n");
}
--------------------------------------------------------------------------------------------------
<출력>
<예외확인>
스택이 비어있습니다.
스택이 비었습니다.
------------------------------------
<push()시작>
------------------------------------
<스택을 출력합니다.>
3 [2]
2 [1]
1 [0]
------------------------------------
<pop시작>
pop =  3 원소빼내기
pop =  2 원소빼내기
pop =  1 원소빼내기
스택이 비어있습니다.
pop = -1 원소빼내기
------------------------------------
--------------------------------------------------------------------------------------------------
